import { ActionRowBuilder, ApplicationCommandType, EmbedBuilder, SelectMenuBuilder } from 'discord.js';

import { Color } from '../constants';
import { Command } from '../interfaces/Command';
import createEmbed from '../utils/commands/createEmbed';
import createAuthData from '../utils/functions/createAuthData';
import getAvatar from '../utils/functions/getAvatar';

const command: Command = {
    name: 'friends',
    description: 'Manage your Epic Games friends list.',
    type: ApplicationCommandType.ChatInput,
    execute: async (interaction) => {
        const auth = await createAuthData(interaction.user.id);

        if (!auth) {
            await interaction.editReply({ embeds: [createEmbed('info', 'You are not logged in.')] });
            return;
        }

        const row = new ActionRowBuilder<SelectMenuBuilder>().addComponents(
            new SelectMenuBuilder().setCustomId('selectFriendAction').setMaxValues(1).setMinValues(1).setOptions(
                {
                    label: 'Accept All',
                    value: 'acceptAll',
                    description: 'Accept all incoming friend requests'
                },
                {
                    label: 'Cancel All',
                    value: 'cancelAll',
                    description: 'Cancel all outgoing friend requests'
                },
                {
                    label: 'Reject All',
                    value: 'rejectAll',
                    description: 'Reject all incoming friend requests'
                },
                {
                    label: 'Remove All',
                    value: 'removeAll',
                    description: 'Remove all existing friends'
                },
                {
                    label: 'Unblock All',
                    value: 'unblockAll',
                    description: 'Unblock all blocked users'
                }
            )
        );

        const avatarUrl = await getAvatar(interaction.user.id);
        const embed = new EmbedBuilder()
            .setTitle('How do you want to manage your friends list?')
            .setColor(Color.GRAY)
            .setFooter({ text: auth.displayName, iconURL: avatarUrl })
            .setTimestamp();

        await interaction.reply({ embeds: [embed], components: [row], ephemeral: true });
    }
    // options: [
    //     {
    //         name: 'acceptall',
    //         description: 'Accepts all incoming friend requests.',
    //         type: ApplicationCommandOptionType.Subcommand
    //     },
    //     {
    //         name: 'cancelall',
    //         description: 'Cancells all outgoing friend requests.',
    //         type: ApplicationCommandOptionType.Subcommand
    //     },
    //     {
    //         name: 'rejectall',
    //         description: 'Rejects all incoming friend requests.',
    //         type: ApplicationCommandOptionType.Subcommand
    //     },
    //     {
    //         name: 'removeall',
    //         description: 'Removes all friends from your friends list.',
    //         type: ApplicationCommandOptionType.Subcommand
    //     },
    //     {
    //         name: 'unblockall',
    //         description: 'Unblocks all blocked users.',
    //         type: ApplicationCommandOptionType.Subcommand
    //     }
    // ]
};

export default command;
